package gob.servir.desempenio.model;

import java.io.Serializable;
import java.util.Calendar;
import java.util.Date;

import javax.persistence.*;

/**
 * 
 * @author Cristhian Munguia Martinez
 */
@Entity
@NamedQueries({
		@NamedQuery(name = "Competencia.getAllListaPerfil", query = "SELECT p "
				+ "FROM Competencia p " + "WHERE p.estado =:estado"),
		@NamedQuery(name = "Competencia.getListaSinPerfil", query = "SELECT p "
				+ "FROM Competencia p "
				+ "WHERE p.estadoPerfil =:estadoPerfil AND p.id.idPuesto =:idPuestoTipo AND p.estado =:estado "),
		@NamedQuery(name = "Competencia.getListaCompetencia", query = "SELECT p "
				+ "FROM Competencia p "
				+ "WHERE p.id.idPuesto =:idPuestoTipo AND p.estado =:estado AND p.estadoPerfil =:estadoPerfil ORDER BY p.id.idCompetencia"),
		@NamedQuery(name = "Competencia.getListaPerfil", query = "SELECT p "
				+ "FROM Competencia p "
				+ "WHERE p.id.idPuesto =:idPuestoTipo AND p.estado =:estado ORDER BY p.id.idCompetencia") })
public class Competencia implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	private CompetenciaPK id;
	@Column
	private Integer nivelDeseado;
	@Column
	private String estado;
	@Column
	private String estadoPerfil;
	@Column
	private String usuarioRegistra;
	@Column
	private String usuarioModifica;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaCreacion;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaModificacion;
	@JoinColumn(name = "idCompetencia", referencedColumnName = "idCompetencia", insertable = false, updatable = false)
	@ManyToOne(optional = false)
	private TipoCompetencia competencia;
	@JoinColumn(name = "idPuesto", referencedColumnName = "id_puesto_tipo", insertable = false, updatable = false)
	@ManyToOne(optional = false)
	private PuestoTipoV puestoTipoV;

	public Competencia() {
		super();
	}

	public CompetenciaPK getId() {
		return id;
	}

	public void setId(CompetenciaPK id) {
		this.id = id;
	}

	public Integer getNivelDeseado() {
		return nivelDeseado;
	}

	public void setNivelDeseado(Integer nivelDeseado) {
		this.nivelDeseado = nivelDeseado;
	}

	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	public String getUsuarioRegistra() {
		return usuarioRegistra;
	}

	public void setUsuarioRegistra(String usuarioRegistra) {
		this.usuarioRegistra = usuarioRegistra;
	}

	public String getUsuarioModifica() {
		return usuarioModifica;
	}

	public void setUsuarioModifica(String usuarioModifica) {
		this.usuarioModifica = usuarioModifica;
	}

	public Date getFechaCreacion() {
		return fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	public Date getFechaModificacion() {
		return fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	public TipoCompetencia getCompetencia() {
		return competencia;
	}

	public void setCompetencia(TipoCompetencia competencia) {
		this.competencia = competencia;
	}

	public PuestoTipoV getPuestoTipoV() {
		return puestoTipoV;
	}

	public void setPuestoTipoV(PuestoTipoV puestoTipoV) {
		this.puestoTipoV = puestoTipoV;
	}

	public String getEstadoPerfil() {
		return estadoPerfil;
	}

	public void setEstadoPerfil(String estadoPerfil) {
		this.estadoPerfil = estadoPerfil;
	}

	@PrePersist
	private void putFechaCreacion() {
		setFechaCreacion(new Date(Calendar.getInstance().getTime().getTime()));
	}

	@PreUpdate
	private void putFechaModificacion() {
		setFechaModificacion(new Date(Calendar.getInstance().getTime()
				.getTime()));
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Competencia other = (Competencia) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append(nivelDeseado);
		return builder.toString();
	}

}