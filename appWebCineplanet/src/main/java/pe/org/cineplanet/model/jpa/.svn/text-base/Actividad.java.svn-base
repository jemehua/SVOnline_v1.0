package gob.servir.desempenio.model;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;

/**
 * 
 * @author Hever Pumallihua
 */
@Entity
@NamedQueries({
		@NamedQuery(name = "Actividad.getListaActividadAll", query = "SELECT a FROM Actividad a ORDER BY a.id.idActividad"),
		@NamedQuery(name = "Actividad.getListaActTemporizado", query = "SELECT a "
				+ "FROM Actividad a "
				+ "WHERE a.id.idProceso =:idProceso AND a.tipo =:tipo AND a.estado =:estado ORDER BY a.id.idActividad"),
		@NamedQuery(name = "Actividad.getListaActividad", query = "SELECT a "
				+ "FROM Actividad a "
				+ "WHERE a.proceso.idProceso =:idProceso AND a.estado =:estado ORDER BY a.id.idActividad"),
		@NamedQuery(name = "Actividad.getListaActTempTodos", query = "SELECT a "
				+ "FROM Actividad a "
				+ "WHERE a.id.idProceso =:idProceso AND (a.tipo =:tipo1 or a.tipo =:tipo2) AND a.estado =:estado ORDER BY a.id.idActividad") })
public class Actividad implements Serializable {

	private static final long serialVersionUID = 1L;
	@EmbeddedId
	private ActividadPK id;
	@Column
	private String nombre;
	@Column
	private String tipo;
	@Column
	private String responsable;
	@Column
	private String estado;
	@JoinColumn(name = "idProceso", referencedColumnName = "idProceso", insertable = false, updatable = false)
	@ManyToOne(optional = false)
	private Proceso proceso;

	public Actividad() {
		super();
	}

	public ActividadPK getId() {
		return id;
	}

	public void setId(ActividadPK id) {
		this.id = id;
	}

	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	public String getTipo() {
		return tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	public Proceso getProceso() {
		return proceso;
	}

	public void setProceso(Proceso proceso) {
		this.proceso = proceso;
	}

	public String getResponsable() {
		return responsable;
	}

	public void setResponsable(String responsable) {
		this.responsable = responsable;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Actividad other = (Actividad) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append(nombre);
		return builder.toString();
	}

}
