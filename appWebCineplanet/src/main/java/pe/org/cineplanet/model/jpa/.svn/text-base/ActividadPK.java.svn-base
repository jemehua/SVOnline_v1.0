/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gob.servir.desempenio.model;

import java.io.Serializable;

import javax.persistence.*;

/**
 * 
 * @author Hever Pumallihua
 */
@Embeddable
public class ActividadPK implements Serializable {
	private static final long serialVersionUID = 1L;

	@Basic(optional = false)
	@Column(name = "idActividad")
	private Long idActividad;
	@Basic(optional = false)
	@Column(name = "idProceso")
	private Long idProceso;

	public ActividadPK() {
		super();
	}

	public ActividadPK(Long idActividad, Long idProceso) {
		super();
		this.idActividad = idActividad;
		this.idProceso = idProceso;
	}

	public Long getIdActividad() {
		return idActividad;
	}

	public void setIdActividad(Long idActividad) {
		this.idActividad = idActividad;
	}

	public Long getIdProceso() {
		return idProceso;
	}

	public void setIdProceso(Long idProceso) {
		this.idProceso = idProceso;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((idActividad == null) ? 0 : idActividad.hashCode());
		result = prime * result
				+ ((idProceso == null) ? 0 : idProceso.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ActividadPK other = (ActividadPK) obj;
		if (idActividad == null) {
			if (other.idActividad != null)
				return false;
		} else if (!idActividad.equals(other.idActividad))
			return false;
		if (idProceso == null) {
			if (other.idProceso != null)
				return false;
		} else if (!idProceso.equals(other.idProceso))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("ActividadPK [idActividad=");
		builder.append(idActividad);
		builder.append(", idProceso=");
		builder.append(idProceso);
		builder.append("]");
		return builder.toString();
	}

}
