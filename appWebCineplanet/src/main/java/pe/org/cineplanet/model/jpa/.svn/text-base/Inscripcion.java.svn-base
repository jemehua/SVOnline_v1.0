package gob.servir.desempenio.model;

import java.io.Serializable;
import java.util.Calendar;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * 
 * @author Cristhian Munguia Martinez
 */
@Entity
@NamedQueries({
		@NamedQuery(name = "Inscripcion.getAllListaInscripcion", query = "SELECT t FROM Inscripcion t WHERE t.estado =:estado "),
		@NamedQuery(name = "Inscripcion.getListaGerentePublico", query = "SELECT i.campania.idCampania, i.asignacionGerenteV.cod_gerente, i.asignacionGerenteV.nombres, i.asignacionGerenteV.ap_paterno, i.asignacionGerenteV.ap_materno, i.asignacionGerenteV.dni, p.id_puesto_tipo, p.dsc_puesto_tipo "
				+ "FROM Inscripcion i LEFT JOIN i.puestoTipoV p "
				+ "WHERE i.id.idCampania =:idCampania AND i.estado =:estado "
				+ "ORDER BY i.asignacionGerenteV.ap_paterno ASC "),
		@NamedQuery(name = "Inscripcion.getListaInscripcion0", query = "SELECT i "
				+ "FROM Inscripcion i "
				+ "WHERE i.id.idCampania =:idCampania AND i.estado =:estado "),
		@NamedQuery(name = "Inscripcion.getListaInscripcion1", query = "SELECT i.campania.idCampania, i.asignacionGerenteV.cod_gerente, i.asignacionGerenteV.nombres, i.asignacionGerenteV.ap_paterno, i.asignacionGerenteV.ap_materno, i.asignacionGerenteV.dni, p.id_puesto_tipo, p.dsc_puesto_tipo, i.estadoMetas "
				+ "FROM Inscripcion i LEFT JOIN i.puestoTipoV p "
				+ "WHERE i.id.idCampania =:idCampania  AND i.estadoMetas <>:estadoMeta AND i.estado =:estado "),
		@NamedQuery(name = "Inscripcion.getListaInscripcion2", query = "SELECT i.campania.idCampania, i.asignacionGerenteV.cod_gerente, i.asignacionGerenteV.nombres, i.asignacionGerenteV.ap_paterno, i.asignacionGerenteV.ap_materno, i.asignacionGerenteV.dni, p.id_puesto_tipo, p.dsc_puesto_tipo, i.estadoMetas "
				+ "FROM Inscripcion i LEFT JOIN i.puestoTipoV p "
				+ "WHERE i.id.idCampania =:idCampania AND i.estadoEvaInicial =:estadoEvaInicial AND i.estado =:estado "),
		@NamedQuery(name = "Inscripcion.getListaInscripcion3", query = "SELECT i.campania.idCampania, i.asignacionGerenteV.cod_gerente, i.asignacionGerenteV.nombres, i.asignacionGerenteV.ap_paterno, i.asignacionGerenteV.ap_materno, i.asignacionGerenteV.dni, p.id_puesto_tipo, p.dsc_puesto_tipo, i.estadoMetas "
				+ "FROM Inscripcion i LEFT JOIN i.puestoTipoV p "
				+ "WHERE i.id.idCampania =:idCampania AND (i.estadoMetas =:estadoMeta1 or i.estadoMetas =:estadoMeta2) AND i.estado =:estado "),
		@NamedQuery(name = "Inscripcion.getListaInscripcion4", query = "SELECT i.campania.idCampania, i.asignacionGerenteV.cod_gerente, i.asignacionGerenteV.nombres, i.asignacionGerenteV.ap_paterno, i.asignacionGerenteV.ap_materno, i.asignacionGerenteV.dni, p.id_puesto_tipo, p.dsc_puesto_tipo, i.estadoMetas "
				+ "FROM Inscripcion i LEFT JOIN i.puestoTipoV p "
				+ "WHERE (i.estadoMetas =:estadoMeta1 or i.estadoMetas =:estadoMeta2) and i.estado =:estado "),
		@NamedQuery(name = "Inscripcion.getInscripcionUsuario", query = "SELECT i.campania.idCampania, i.campania.denominacion,i.campania.anio,i.campania.postAnio, "
				+ "i.asignacionGerenteV.cod_gerente, i.asignacionGerenteV.nombres, i.asignacionGerenteV.ap_paterno, i.asignacionGerenteV.ap_materno, "
				+ "p.id_puesto_tipo, p.dsc_puesto_tipo "
				+ "FROM Inscripcion i LEFT JOIN i.puestoTipoV p "
				+ "WHERE i.id.idCampania =:idCampania AND i.campania.estadoCampania =:estadoCampania AND i.estado =:estado  "
				+ "AND i.asignacionGerenteV.dni = :dni"),
		@NamedQuery(name = "Inscripcion.validarInscripcion", query = "SELECT i.campania.anio "
				+ "from Inscripcion i "
				+ "where i.id.idCampania =:idCampania and i.id.idGerentePublico =:codGerente and i.estado =:estado "),
		@NamedQuery(name = "Inscripcion.getListaInscripcionActivo", query = "SELECT i.id, i.estado FROM Inscripcion i "
				+ "WHERE i.id.idGerentePublico =:codGerente AND i.campania.estadoCampania =:estadoCampania "
				+ "AND i.estado =:estado "),
		@NamedQuery(name = "Inscripcion.getListGpEvaCulminado", query = "SELECT d.inscripcion.id, d.inscripcion.asignacionGerenteV.cod_gerente, d.inscripcion.asignacionGerenteV.nombres, d.inscripcion.asignacionGerenteV.ap_paterno, d.inscripcion.asignacionGerenteV.ap_materno, d.inscripcion.asignacionGerenteV.dni, "
				+ "d.inscripcion.puestoTipoV.id_puesto_tipo, d.inscripcion.puestoTipoV.dsc_puesto_tipo, d.inscripcion.campania.denominacion, d.inscripcion.campania.anio, d.inscripcion.campania.postAnio "
				+ "FROM DetalleInscripcion d "
				+ "WHERE (d.id.idCampania =:idCampania OR (d.id.idCampania <>:idCampania AND :idCampania = 0)) "
				+ "AND (d.inscripcion.puestoTipoV.id_puesto_tipo =:idPuesto OR (d.inscripcion.puestoTipoV.id_puesto_tipo <>:idPuesto AND :idPuesto = 0)) "
				+ "AND (d.entidadDestinoV.id_ed =:idEntidad OR (d.entidadDestinoV.id_ed <>:idEntidad AND :idEntidad = 0)) "
				+ "AND d.estado =:estado "
				+ "AND ( SELECT f.estado FROM Flujo f WHERE f.id.idCampania = d.id.idCampania AND f.id.idGerentePublico = d.id.idGerentePublico AND f.id.idProceso = 3 ) = 'AT' "
				+ "ORDER BY d.inscripcion.asignacionGerenteV.ap_paterno ASC ") })
public class Inscripcion implements Serializable {

	private static final long serialVersionUID = 1L;

	@EmbeddedId
	private InscripcionPK id;
	@Column
	private Long idAsignacion;
	@Column
	private String estado;
	@Column
	private String estadoMetas;
	@Column
	private String estadoPlanes;
	@Column
	private String estadoEvaInicial;
	@Column
	private Boolean estadoModificacionPlan;
	@Column
	private String fileName;
	@Column
	@Lob
	private byte[] documento;
	@Column
	private String usuarioRegistra;
	@Column
	private String usuarioModifica;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaCreacion;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaModificacion;
	@Transient
	private Double promedioMetas;
	@Transient
	private Double promedioComp;
	@Transient
	private Double promedioFinal;
	@Transient
	private String interpretacion;
	@ManyToOne(fetch = FetchType.LAZY, optional = true)
	@JoinColumn(name = "idPuestoTipo", referencedColumnName = "id_puesto_tipo")
	private PuestoTipoV puestoTipoV;
	@JoinColumn(name = "idCampania", referencedColumnName = "idCampania", insertable = false, updatable = false)
	@ManyToOne(fetch = FetchType.LAZY, optional = false)
	private Campania campania;
	@JoinColumn(name = "idGerentePublico", referencedColumnName = "cod_gerente", insertable = false, updatable = false)
	@ManyToOne(fetch = FetchType.LAZY, optional = false)
	private AsignacionGerenteV asignacionGerenteV;

	@Column
	private boolean isTeAndJi;

	public Inscripcion() {
		super();
	}

	public String getFileName() {
		return fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	public byte[] getDocumento() {
		return documento;
	}

	public void setDocumento(byte[] documento) {
		this.documento = documento;
	}

	public String getEstadoPlanes() {
		return estadoPlanes;
	}

	public void setEstadoPlanes(String estadoPlanes) {
		this.estadoPlanes = estadoPlanes;
	}

	public Long getIdAsignacion() {
		return idAsignacion;
	}

	public void setIdAsignacion(Long idAsignacion) {
		this.idAsignacion = idAsignacion;
	}

	public AsignacionGerenteV getAsignacionGerenteV() {
		return asignacionGerenteV;
	}

	public void setAsignacionGerenteV(AsignacionGerenteV asignacionGerenteV) {
		this.asignacionGerenteV = asignacionGerenteV;
	}

	public InscripcionPK getId() {
		return id;
	}

	public void setId(InscripcionPK id) {
		this.id = id;
	}

	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	public String getEstadoMetas() {
		return estadoMetas;
	}

	public void setEstadoMetas(String estadoMetas) {
		this.estadoMetas = estadoMetas;
	}

	public String getEstadoEvaInicial() {
		return estadoEvaInicial;
	}

	public void setEstadoEvaInicial(String estadoEvaInicial) {
		this.estadoEvaInicial = estadoEvaInicial;
	}

	public String getUsuarioRegistra() {
		return usuarioRegistra;
	}

	public void setUsuarioRegistra(String usuarioRegistra) {
		this.usuarioRegistra = usuarioRegistra;
	}

	public String getUsuarioModifica() {
		return usuarioModifica;
	}

	public void setUsuarioModifica(String usuarioModifica) {
		this.usuarioModifica = usuarioModifica;
	}

	public Date getFechaCreacion() {
		return fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	public Date getFechaModificacion() {
		return fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	public PuestoTipoV getPuestoTipoV() {
		return puestoTipoV;
	}

	public void setPuestoTipoV(PuestoTipoV puestoTipoV) {
		this.puestoTipoV = puestoTipoV;
	}

	public Campania getCampania() {
		return campania;
	}

	public void setCampania(Campania campania) {
		this.campania = campania;
	}

	public Boolean getEstadoModificacionPlan() {
		return estadoModificacionPlan;
	}

	public void setEstadoModificacionPlan(Boolean estadoModificacionPlan) {
		this.estadoModificacionPlan = estadoModificacionPlan;
	}

	public boolean isTeAndJi() {
		return isTeAndJi;
	}

	public void setTeAndJi(boolean isTeAndJi) {
		this.isTeAndJi = isTeAndJi;
	}

	public Double getPromedioMetas() {
		return promedioMetas;
	}

	public void setPromedioMetas(Double promedioMetas) {
		this.promedioMetas = promedioMetas;
	}

	public Double getPromedioComp() {
		return promedioComp;
	}

	public void setPromedioComp(Double promedioComp) {
		this.promedioComp = promedioComp;
	}

	public Double getPromedioFinal() {
		return promedioFinal;
	}

	public void setPromedioFinal(Double promedioFinal) {
		this.promedioFinal = promedioFinal;
	}

	public String getInterpretacion() {
		return interpretacion;
	}

	public void setInterpretacion(String interpretacion) {
		this.interpretacion = interpretacion;
	}

	@PrePersist
	private void putFechaCreacion() {
		setFechaCreacion(new Date(Calendar.getInstance().getTime().getTime()));
	}

	@PreUpdate
	private void putFechaModificacion() {
		setFechaModificacion(new Date(Calendar.getInstance().getTime()
				.getTime()));
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Inscripcion other = (Inscripcion) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Inscripcion [id=");
		builder.append(id);
		builder.append(", idAsignacion=");
		builder.append(idAsignacion);
		builder.append(", estado=");
		builder.append(estado);
		builder.append(", estadoMetas=");
		builder.append(estadoMetas);
		builder.append(", estadoPlanes=");
		builder.append(estadoPlanes);
		builder.append(", estadoEvaInicial=");
		builder.append(estadoEvaInicial);
		builder.append(", usuarioRegistra=");
		builder.append(usuarioRegistra);
		builder.append(", usuarioModifica=");
		builder.append(usuarioModifica);
		builder.append(", fechaCreacion=");
		builder.append(fechaCreacion);
		builder.append(", fechaModificacion=");
		builder.append(fechaModificacion);
		builder.append(", puestoTipoV=");
		builder.append(puestoTipoV);
		builder.append(", campania=");
		builder.append(campania);
		builder.append(", asignacionGerenteV=");
		builder.append(asignacionGerenteV);
		builder.append("]");
		return builder.toString();
	}
}
