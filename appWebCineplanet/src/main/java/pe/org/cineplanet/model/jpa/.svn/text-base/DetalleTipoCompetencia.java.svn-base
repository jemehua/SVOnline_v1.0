package gob.servir.desempenio.model;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;

/**
 * 
 * @author Cristhian Munguia Martinez
 */
@Entity
@NamedQueries({ @NamedQuery(name = "DetalleTipoCompetencia.findDetalleTipoCompetencia", query = "SELECT d "
		+ "FROM DetalleTipoCompetencia d "
		+ "WHERE d.estado =:estado AND d.id.idTipoCompetencia =:id ORDER BY d.id.idTipoCompetencia ASC") })
public class DetalleTipoCompetencia implements Serializable {

	private static final long serialVersionUID = 1L;

	@Id
	private DetalleTipoCompetenciaPK id;
	@Column(length = 1000)
	private String descripcion;
	@Column
	private String estado;
	@JoinColumn(name = "idTipoCompetencia", referencedColumnName = "idCompetencia", insertable = false, updatable = false)
	@ManyToOne(optional = false)
	private TipoCompetencia tipoCompetencia;

	public DetalleTipoCompetencia() {
		super();
	}

	public DetalleTipoCompetenciaPK getId() {
		return id;
	}

	public void setId(DetalleTipoCompetenciaPK id) {
		this.id = id;
	}

	public String getDescripcion() {
		return descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	public TipoCompetencia getTipoCompetencia() {
		return tipoCompetencia;
	}

	public void setTipoCompetencia(TipoCompetencia tipoCompetencia) {
		this.tipoCompetencia = tipoCompetencia;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DetalleTipoCompetencia other = (DetalleTipoCompetencia) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append(descripcion);
		return builder.toString();
	}

}
