package gob.servir.desempenio.model;

import java.io.Serializable;
import java.util.Calendar;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * 
 * @author Hever Pumallihua
 */
@Entity
@NamedQueries({
		@NamedQuery(name = "PlanDesarrollo.getAllListaPlanDesarrollo", query = "SELECT p FROM PlanDesarrollo p"),
		@NamedQuery(name = "PlanDesarrollo.getListByCampaniaAndGerente", query = "SELECT p.evaluacionInicial.id, p.evaluacionInicial.competencia.competencia.denominacion, p.evaluacionInicial.competencia.nivelDeseado, p.evaluacionInicial.nota, p.evaluacionInicial.brecha, "
				+ "p.id, p.actCapacitacion, p.actEntrenamiento, p.aprobacion, p.observacion, p.fechaFinCapacitacion, p.fechaFinEntrenamiento "
				+ "FROM PlanDesarrollo p "
				+ "WHERE p.id.idCampania =:idCampania "
				+ "AND p.id.idGerentePublico =:idGerente "
				+ "AND p.estado =:estado " + "ORDER BY p.id.idCompetencia ASC"),
		@NamedQuery(name = "PlanDesarrollo.getListByCampaniaAndGerenteAndAprobacion", query = "SELECT p.evaluacionInicial.id, p.evaluacionInicial.competencia.competencia.denominacion, p.evaluacionInicial.competencia.nivelDeseado, p.evaluacionInicial.nota, p.evaluacionInicial.brecha, "
				+ "p.id, p.actCapacitacion, p.actEntrenamiento, p.aprobacion, p.observacion, p.fechaFinCapacitacion, p.fechaFinEntrenamiento  "
				+ "FROM PlanDesarrollo p "
				+ "WHERE p.id.idCampania =:idCampania "
				+ "AND p.id.idGerentePublico =:idGerente "
				+ "AND p.aprobacion =:aprobacion AND p.estado =:estado "
				+ "ORDER BY p.id.idCompetencia ASC"),
		@NamedQuery(name = "PlanDesarrollo.getListaPlanDesarrolloCompetencia", query = "SELECT p "
				+ "FROM PlanDesarrollo p "
				+ "WHERE p.id.idCompetencia =:idCompetencia AND p.id.idCampania =:idCampania AND p.id.idGerentePublico =:codGerente AND p.id.idPuesto =:idPuesto "),
		@NamedQuery(name = "PlanDesarrollo.getListaPlanDesarrolloPuesto", query = "SELECT p "
				+ "FROM PlanDesarrollo p "
				+ "WHERE p.id.idCampania =:idCampania AND p.id.idGerentePublico =:codGerente AND p.id.idPuesto =:idPuesto ") })
public class PlanDesarrollo implements Serializable {

	private static final long serialVersionUID = 1L;
	@EmbeddedId
	private PlanDesarrolloPK id;
	@Column(length = 500)
	private String actCapacitacion;
	@Column(length = 500)
	private String actEntrenamiento;
	@Column
	private boolean aprobacion;
	@Column(length = 4000)
	private String observacion;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaFinCapacitacion;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaFinEntrenamiento;
	@Column
	private String usuarioRegistra;
	@Column
	private String usuarioModifica;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaCreacion;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaModificacion;
	@Column
	private String estado;
	@ManyToOne(fetch = FetchType.LAZY, optional = false)
	@JoinColumns({
			@JoinColumn(name = "idGerentePublico", referencedColumnName = "idGerentePublico", insertable = false, updatable = false),
			@JoinColumn(name = "idCompetencia", referencedColumnName = "idCompetencia", insertable = false, updatable = false),
			@JoinColumn(name = "idCampania", referencedColumnName = "idCampania", insertable = false, updatable = false),
			@JoinColumn(name = "idPuesto", referencedColumnName = "idPuesto", insertable = false, updatable = false) })
	private EvaluacionInicial evaluacionInicial;

	public PlanDesarrollo() {
		super();
	}

	public PlanDesarrolloPK getId() {
		return id;
	}

	public void setId(PlanDesarrolloPK id) {
		this.id = id;
	}

	public boolean isAprobacion() {
		return aprobacion;
	}

	public void setAprobacion(boolean aprobacion) {
		this.aprobacion = aprobacion;
	}

	public String getActCapacitacion() {
		return actCapacitacion;
	}

	public void setActCapacitacion(String actCapacitacion) {
		this.actCapacitacion = actCapacitacion;
	}

	public String getActEntrenamiento() {
		return actEntrenamiento;
	}

	public void setActEntrenamiento(String actEntrenamiento) {
		this.actEntrenamiento = actEntrenamiento;
	}

	public String getUsuarioRegistra() {
		return usuarioRegistra;
	}

	public void setUsuarioRegistra(String usuarioRegistra) {
		this.usuarioRegistra = usuarioRegistra;
	}

	public String getUsuarioModifica() {
		return usuarioModifica;
	}

	public void setUsuarioModifica(String usuarioModifica) {
		this.usuarioModifica = usuarioModifica;
	}

	public Date getFechaCreacion() {
		return fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	public Date getFechaModificacion() {
		return fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	public EvaluacionInicial getEvaluacionInicial() {
		return evaluacionInicial;
	}

	public void setEvaluacionInicial(EvaluacionInicial evaluacionInicial) {
		this.evaluacionInicial = evaluacionInicial;
	}

	public String getObservacion() {
		return observacion;
	}

	public void setObservacion(String observacion) {
		this.observacion = observacion;
	}

	public Date getFechaFinCapacitacion() {
		return fechaFinCapacitacion;
	}

	public void setFechaFinCapacitacion(Date fechaFinCapacitacion) {
		this.fechaFinCapacitacion = fechaFinCapacitacion;
	}

	public Date getFechaFinEntrenamiento() {
		return fechaFinEntrenamiento;
	}

	public void setFechaFinEntrenamiento(Date fechaFinEntrenamiento) {
		this.fechaFinEntrenamiento = fechaFinEntrenamiento;
	}

	@PrePersist
	private void putFechaCreacion() {
		setFechaCreacion(new Date(Calendar.getInstance().getTime().getTime()));
	}

	@PreUpdate
	private void putFechaModificacion() {
		setFechaModificacion(new Date(Calendar.getInstance().getTime()
				.getTime()));
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		PlanDesarrollo other = (PlanDesarrollo) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append(observacion);
		return builder.toString();
	}

}
