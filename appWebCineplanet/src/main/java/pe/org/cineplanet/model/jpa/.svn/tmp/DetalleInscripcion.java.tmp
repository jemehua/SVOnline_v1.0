package gob.servir.desempenio.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

@Entity
public class DetalleInscripcion implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@EmbeddedId
	private DetalleInscripcionPK id;
	@Column
	private String usuarioRegistra;
	@Column
	private String usuarioModifica;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaCreacion;
	@Column
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaModificacion;
	@Column
	private String estado;
	@JoinColumn(name = "dni")
	@ManyToOne(optional = true)
	private JefeInmediato jefeInmediato;

	@ManyToOne(optional = true)
	@JoinColumn(name = "id_jefe_inmediato")
	private JefeInmediatoV jefeInmediatoV;

	@ManyToOne(optional = false)
	@JoinColumns({
			@JoinColumn(name = "idCampania", referencedColumnName = "idCampania", insertable = false, updatable = false),
			@JoinColumn(name = "idGerentePublico", referencedColumnName = "idGerentePublico", insertable = false, updatable = false) })
	private Inscripcion inscripcion;
	@JoinColumn(name = "id_ed", referencedColumnName = "id_ed")
	@ManyToOne(optional = false)
	private EntidadDestinoV entidadDestinoV;

	@ManyToOne(optional = true)
	@JoinColumn(name = "nroDocTE")
	private TitularEntidad titularEntidad;

	public DetalleInscripcion() {
		super();
	}

	public TitularEntidad getTitularEntidad() {
		return titularEntidad;
	}

	public void setTitularEntidad(TitularEntidad titularEntidad) {
		this.titularEntidad = titularEntidad;
	}

	public JefeInmediatoV getJefeInmediatoV() {
		return jefeInmediatoV;
	}

	public void setJefeInmediatoV(JefeInmediatoV jefeInmediatoV) {
		this.jefeInmediatoV = jefeInmediatoV;
	}

	public DetalleInscripcionPK getId() {
		return id;
	}

	public void setId(DetalleInscripcionPK id) {
		this.id = id;
	}

	public String getUsuarioRegistra() {
		return usuarioRegistra;
	}

	public void setUsuarioRegistra(String usuarioRegistra) {
		this.usuarioRegistra = usuarioRegistra;
	}

	public String getUsuarioModifica() {
		return usuarioModifica;
	}

	public void setUsuarioModifica(String usuarioModifica) {
		this.usuarioModifica = usuarioModifica;
	}

	public Date getFechaCreacion() {
		return fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	public Date getFechaModificacion() {
		return fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	public JefeInmediato getJefeInmediato() {
		return jefeInmediato;
	}

	public void setJefeInmediato(JefeInmediato jefeInmediato) {
		this.jefeInmediato = jefeInmediato;
	}

	public Inscripcion getInscripcion() {
		return inscripcion;
	}

	public void setInscripcion(Inscripcion inscripcion) {
		this.inscripcion = inscripcion;
	}

	public EntidadDestinoV getEntidadDestinoV() {
		return entidadDestinoV;
	}

	public void setEntidadDestinoV(EntidadDestinoV entidadDestinoV) {
		this.entidadDestinoV = entidadDestinoV;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DetalleInscripcion other = (DetalleInscripcion) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("DetalleInscripcion [id=");
		builder.append(id);
		builder.append("]");
		return builder.toString();
	}

}
