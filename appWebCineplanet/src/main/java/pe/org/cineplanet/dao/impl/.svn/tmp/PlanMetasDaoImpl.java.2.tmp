package gob.servir.desempenio.daoImpl;

import gob.servir.desempenio.dao.PlanMetasDao;
import gob.servir.desempenio.model.InscripcionPK;
import gob.servir.desempenio.model.Meta;
import gob.servir.desempenio.model.MetaPK;
import gob.servir.desempenio.model.PlanMetas;
import gob.servir.desempenio.model.PlanMetasPK;
import gob.servir.desempenio.util.Constantes;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

/**
 * 
 * @author Hever Pumallihua
 */
@Repository
public class PlanMetasDaoImpl implements PlanMetasDao {
	@PersistenceContext
	private EntityManager em;

	public PlanMetas find(PlanMetasPK id) {
		try {
			return em.find(PlanMetas.class, id);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	@Transactional
	public PlanMetas save(PlanMetas obj) {
		try {
			em.persist(obj);
			return obj;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	@Transactional
	public PlanMetas edit(PlanMetas obj) {
		try {
			return em.merge(obj);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	@SuppressWarnings("unchecked")
	public List<PlanMetas> getListaPlanMetas() {
		Query q = null;
		q = (Query) em.createQuery("select m from PlanMetas m");
		// q.setParameter("estado", "A");
		try {
			return q.getResultList();
		} catch (Exception as) {
			as.printStackTrace();
			return null;
		}
	}

	@SuppressWarnings("unchecked")
	public List<PlanMetas> getListaPlanMetas(Meta obj) {
		Query q = null;
		q = (Query) em
				.createQuery("select m from PlanMetas m where m.id.idCampania =:idCampania and m.id.idGerentePublico =:idGerente and m.id.idMeta =:idMeta");
		q.setParameter("idCampania", obj.getId().getIdCampania());
		q.setParameter("idGerente", obj.getId().getIdGerentePublico());
		q.setParameter("idMeta", obj.getId().getIdMeta());
		try {
			return q.getResultList();
		} catch (Exception as) {
			as.printStackTrace();
			return null;
		}
	}

	@SuppressWarnings("unchecked")
	public List<PlanMetas> getListaPlanMetas(InscripcionPK inspk,
			boolean aprobacion) {
		Query q = em
				.createNamedQuery("PlanMetas.getListByCampaniaAndGerenteAndAprobacion");
		q.setParameter("idCampania", inspk.getIdCampania());
		q.setParameter("idGerente", inspk.getIdGerentePublico());
		q.setParameter("aprobacion", aprobacion);
		q.setParameter("estado", Constantes.ACTIVO);
		try {

			List<Object[]> listaObjetos = new ArrayList<Object[]>();

			listaObjetos = q.getResultList();

			List<PlanMetas> listaPlanMetas = new ArrayList<PlanMetas>();

			for (Object[] row : listaObjetos) {
				PlanMetas planMetas = new PlanMetas();
				Meta meta = new Meta();
				meta.setId((MetaPK) row[0]);
				meta.setTipo((String) row[1]);
				meta.setDenominacion((String) row[2]);
				meta.setRelacionPOI((String) row[3]);
				meta.setPeso((Integer) row[4]);
				planMetas.setId((PlanMetasPK) row[5]);
				planMetas.setMeta(meta);
				planMetas.setDescripcionPlan((String) row[6]);
				planMetas.setAprobacion((Boolean) row[7]);
				planMetas.setObservacion((String) row[8]);

				listaPlanMetas.add(planMetas);
			}

			return listaPlanMetas;

		} catch (Exception as) {
			as.printStackTrace();
			return null;
		}
	}

	public Integer getCantidadPlanesDesaprobados(InscripcionPK inspk) {
		Query q = null;
		q = (Query) em
				.createQuery("SELECT COUNT(m) FROM PlanMetas m WHERE m.id.idCampania =:idCampania AND m.id.idGerentePublico =:idGerente AND m.aprobacion =:desaprobado");
		q.setParameter("idCampania", inspk.getIdCampania());
		q.setParameter("idGerente", inspk.getIdGerentePublico());
		q.setParameter("desaprobado", false);
		try {
			return (Integer) q.getSingleResult();
		} catch (Exception as) {
			//as.printStackTrace();
			return 0;
		}
	}

}
