package gob.servir.desempenio.daoImpl;

import gob.servir.desempenio.dao.NotificacionDao;
import gob.servir.desempenio.model.DetalleFlujoPK;
import gob.servir.desempenio.model.Notificacion;
import gob.servir.desempenio.model.NotificacionPK;
import gob.servir.desempenio.service.JavaMailService;
import gob.servir.desempenio.service.MensajeService;
import gob.servir.desempenio.util.Constantes;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.persistence.TypedQuery;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

/**
 * 
 * @author Hever Pumallihua
 */
@Repository
public class NotificacionDaoImpl implements NotificacionDao {

	@PersistenceContext
	private EntityManager em;

	@Autowired
	private JavaMailService javaMailService;
	@Autowired
	private MensajeService mensajeService;

	public Notificacion find(NotificacionPK id) {
		try {
			return em.find(Notificacion.class, id);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	@Transactional
	public Notificacion save(Notificacion obj) {
		try {
			em.persist(obj);
			return obj;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	@Transactional
	public Notificacion edit(Notificacion obj) {
		try {
			return em.merge(obj);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	@SuppressWarnings("unchecked")
	public List<Notificacion> getListaNotificacion() {
		Query q = null;
		q = (Query) em.createQuery("select n from Notificacion n");
		try {
			return q.getResultList();
		} catch (Exception as) {
			as.printStackTrace();
			return null;
		}
	}

	public Long getMaxId(DetalleFlujoPK id) {
		
		TypedQuery<Long> tq = em.createNamedQuery("Notificacion.getMaxId", Long.class);
					
			tq.setParameter("idCampania", id.getIdCampania());
			tq.setParameter("idAct", id.getIdActividad());
			tq.setParameter("idProceso", id.getIdProceso());
			tq.setParameter("idGerente", id.getIdGerentePublico());
			tq.setParameter("estado", Constantes.ACTIVO);
		try {
			return tq.getSingleResult() + 1L;

		} catch (Exception e) {
			return 1L;
		}

	}

	@SuppressWarnings("unchecked")
	public List<Notificacion> getListaNotificacion(DetalleFlujoPK id) {
		Query q = em.createNamedQuery("Notificacion.getListByCampaniaAndGerenteAndProcesoAndActividad");

		q.setParameter("idCampania", id.getIdCampania());
		q.setParameter("idAct", id.getIdActividad());
		q.setParameter("idProceso", id.getIdProceso());
		q.setParameter("idGerente", id.getIdGerentePublico());
		q.setParameter("estado", Constantes.ACTIVO);
		
		try {

		List<Object[]> listaObjetos = new ArrayList<Object[]>();

		listaObjetos = q.getResultList();

		List<Notificacion> listaNotificacion = new ArrayList<Notificacion>();

		for (Object[] row : listaObjetos) {
			Notificacion notificacion = new Notificacion();
			
			notificacion.setId((NotificacionPK) row[0]);
			notificacion.setUsuarioRegistra((String) row[1]);
			notificacion.setFechaCreacion((Date) row[2]);
			notificacion.setReceptor((String) row[3]);

			listaNotificacion.add(notificacion);
		}

		return listaNotificacion;
		} catch (Exception as) {
			as.printStackTrace();
			return null;
		}
	}
	
	public Integer getCountByReceptor(DetalleFlujoPK id, String receptor) {
		TypedQuery<Long> tq = em.createNamedQuery(
				"Notificacion.getCountByDetalleFlujoPkAndReceptor", Long.class);
		tq.setParameter("idCampania", id.getIdCampania());
		tq.setParameter("idAct", id.getIdActividad());
		tq.setParameter("idProceso", id.getIdProceso());
		tq.setParameter("idGerente", id.getIdGerentePublico());
		tq.setParameter("estado", Constantes.ACTIVO);
		tq.setParameter("receptor", receptor);

		try {
			return tq.getSingleResult().intValue();
		} catch (Exception as) {
			return 0;
		}
	}
}
