package gob.servir.desempenio.bean;

import gob.servir.desempenio.model.Campania;
import gob.servir.desempenio.service.CampaniaService;

import java.util.List;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

/**
 * 
 * @author Hever Pumallihua
 */
@ContextConfiguration("/test-context.xml")
@RunWith(SpringJUnit4ClassRunner.class)
@Transactional
public class CampaniaTest {

	@Autowired
	private CampaniaService campaniaService;
	
	// inicializar data
	@Before
	public void prepararData() {
	
		Campania campania1 = new Campania();
		campania1.setIdCampania(1L);
		campania1.setDenominacion("Campaña 1");
		campania1.setEstado("A");
		campaniaService.save(campania1);

		Campania campania2 = new Campania();
		campania2.setIdCampania(2L);
		campania2.setDenominacion("Campaña 2");
		campania1.setEstado("A");
		campaniaService.save(campania2);
	}

	@Test
	public void deberiaGuardarUsuario() {
		// Arrange - Preparar
		Campania campania3 = new Campania();
		campania3.setIdCampania(3L);
		campania3.setDenominacion("Campaña 3");
		campania3.setEstado("A");
		
		// Act - Actuar
		Campania campaniaResp = campaniaService.save(campania3);

		// Assert - Afirmar
		Assert.assertNotNull(campaniaResp);
	}

	@Test
	public void deberiaModificarUsuario() {
		// Arrange - Preparar
		Campania campania3 = new Campania();
		campania3.setIdCampania(1L);
		campania3.setDenominacion("Campaña 1 modificado");

		// Act - Actuar
		Campania campaniaResp = campaniaService.edit(campania3);

		// Assert - Afirmar
		Assert.assertFalse("el nombre deberia haber cambiado", campaniaResp.getDenominacion().equalsIgnoreCase("Campaña 1"));
	}
	
	@Test
	public void deberiaBuscarUsuarioPorId() {
		// Arrange - Preparar
		Long id = 1L;
		Campania campaniaResp = null;
		
		// Arrange - Actuar
		campaniaResp = campaniaService.find(id);
		
		// Assert - Afirmar
		Assert.assertNotNull("No deberia ser null", campaniaResp);
	}

	@Test
	@Ignore
	public void deberiaListarUsuarios() {
		// Arrange - Preparar
		List<Campania> listaCampania = null;
		
		// Arrange - Actuar
		listaCampania = campaniaService.getListaCampania();
		 
		// Assert - Afirmar
		Assert.assertEquals(2, listaCampania.size());
	}

}
